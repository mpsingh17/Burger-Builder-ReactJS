{"version":3,"sources":["components/build_controls/build_control/BuildControl.module.css","components/layout/Layout.module.css","components/burger/Burger.module.css","components/build_controls/BuildControls.module.css","components/UI/Modal/Modal.module.css","components/UI/Backdrop/Backdrop.module.css","components/burger/burger_ingredient/BurgerIngredient.module.css","components/UI/Sidebar/Sidebar.js","components/burger/burger_ingredient/BurgerIngredient.js","components/burger/Burger.js","components/build_controls/build_control/BuildControl.js","components/build_controls/BuildControls.js","components/UI/Backdrop/Backdrop.js","components/UI/Modal/Modal.js","components/OrderSummary/OrderSummary.js","containers/burger_builder/BurgerBuilder.js","components/UI/Navbar/Navbar.js","components/layout/Layout.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","FlexFill","RemoveColPaddings","BurgerCard","NoIngredientLabel","BuildControls","PriceBadge","Modal","Backdrop","Ingredient","Meat","Cheese","Salad","Bacon","BurgerTop","BurgerBottom","sidebar","props","react_default","a","createElement","ListGroup","Item","className","action","href","BurgerIngredient","ingredient","type","concat","styles","Burger","totalIngredients","Object","keys","ingredients","forEach","ing","i","push","transformedIngredients","map","burger_ingredient_BurgerIngredient","key","length","Card","body","BuildControl","label","onClick","removeIngredientHandler","addIngredientHandler","controls","Body","Row","Col","Title","ctrl","build_control_BuildControl","disabled","isPurchasable","showModalHandler","price","toFixed","backdrop","show","hideModalHandler","modal","Fragment","children","orderSummary","ingredientSummary","style","textTransform","purchaseCancelled","purchaseContinue","INGREDIENT_PRICES","salad","cheese","meat","bacon","BurgerBuilder","state","showModal","updateIsPurchasableState","ingredientCount","values","reduce","sum","currentValue","_this","setState","updatedCount","ingredientsCopy","objectSpread","newPrice","oldCount","console","log","alert","this","OrderSummary","burger_Burger","build_controls_BuildControls","Component","navbar","Navbar","bg","expand","Brand","Toggle","aria-controls","Collapse","id","Nav","Link","Layout","Container","fluid","md","Sidebar","Navbar_Navbar","burger_builder_BurgerBuilder","App","layout_Layout","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e22a0a0a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"FlexFill\":\"BuildControl_FlexFill__JtBfh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"RemoveColPaddings\":\"Layout_RemoveColPaddings__1-ExG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BurgerCard\":\"Burger_BurgerCard__w1Ull\",\"NoIngredientLabel\":\"Burger_NoIngredientLabel__3q8sg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControls\":\"BuildControls_BuildControls__1KIrQ\",\"PriceBadge\":\"BuildControls_PriceBadge__qqtwO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__1-5dN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__3j6VK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Ingredient\":\"BurgerIngredient_Ingredient__15uYv\",\"Meat\":\"BurgerIngredient_Meat__1ya4y\",\"Cheese\":\"BurgerIngredient_Cheese__3kHUH\",\"Salad\":\"BurgerIngredient_Salad__29f5j\",\"Bacon\":\"BurgerIngredient_Bacon__1e0OV\",\"BurgerTop\":\"BurgerIngredient_BurgerTop__2ZmYX\",\"BurgerBottom\":\"BurgerIngredient_BurgerBottom__3v1Yq\"};","import React from \"react\";\n// import styles from \"./Sidebar.module.css\";\nimport { ListGroup } from \"react-bootstrap\";\n\nconst sidebar = props => {\n    return (\n        <ListGroup>\n            <ListGroup.Item className=\"py-3\">Logo</ListGroup.Item>\n            <ListGroup.Item action href=\"#\" className=\"py-3\">\n                Burger\n            </ListGroup.Item>\n        </ListGroup>\n    );\n};\n\nexport default sidebar;\n","import React from \"react\";\nimport PropType from \"prop-types\";\nimport styles from \"./BurgerIngredient.module.css\";\n\nconst BurgerIngredient = props => {\n    let ingredient = null;\n\n    switch (props.type) {\n        case \"bread-top\":\n            ingredient = (\n                <div className={`${styles.Ingredient} ${styles.BurgerTop}`} />\n            );\n            break;\n\n        case \"bread-bottom\":\n            ingredient = (\n                <div\n                    className={`${styles.Ingredient} ${styles.BurgerBottom}`}\n                />\n            );\n            break;\n\n        case \"meat\":\n            ingredient = (\n                <div className={`${styles.Ingredient} ${styles.Meat} my-1`} />\n            );\n            break;\n\n        case \"cheese\":\n            ingredient = (\n                <div className={`${styles.Ingredient} ${styles.Cheese} my-1`} />\n            );\n            break;\n\n        case \"salad\":\n            ingredient = (\n                <div className={`${styles.Ingredient} ${styles.Salad} my-1`} />\n            );\n            break;\n\n        case \"bacon\":\n            ingredient = (\n                <div className={`${styles.Ingredient} ${styles.Bacon} my-1`} />\n            );\n            break;\n\n        default:\n            ingredient = null;\n            break;\n    }\n    return ingredient;\n};\n\nBurgerIngredient.propTypes = {\n    type: PropType.string.isRequired\n};\n\nexport default BurgerIngredient;\n","import React from \"react\";\nimport styles from \"./Burger.module.css\";\nimport BurgerIngredient from \"./burger_ingredient/BurgerIngredient\";\nimport { Card } from \"react-bootstrap\";\n\nconst Burger = props => {\n    const totalIngredients = [];\n    Object.keys(props.ingredients).forEach(ing => {\n        for (let i = 0; i < props.ingredients[ing]; i++) {\n            totalIngredients.push(ing);\n        }\n    });\n\n    let transformedIngredients = totalIngredients.map((ing, i) => {\n        return <BurgerIngredient key={ing + i} type={ing} />;\n    });\n\n    if (transformedIngredients.length === 0)\n        transformedIngredients = (\n            <p\n                className={`${\n                    styles.NoIngredientLabel\n                } mx-auto my-1 text-center`}\n            >\n                Select ingredients, please.\n            </p>\n        );\n\n    return (\n        <Card\n            body\n            className={`${\n                styles.BurgerCard\n            } mx-auto mt-4 shadow p-3 mb-4 bg-white rounded`}\n        >\n            <BurgerIngredient type=\"bread-top\" />\n            {transformedIngredients}\n            <BurgerIngredient type=\"bread-bottom\" />\n        </Card>\n    );\n};\n\nexport default Burger;\n","import React from \"react\";\nimport styles from \"./BuildControl.module.css\";\n\nconst BuildControl = props => {\n    return (\n        <div className=\"d-flex mb-2 bg-secondary align-items-center\">\n            <div className={`${styles.FlexFill} p-2 font-weight-bolder`}>\n                {props.label}\n            </div>\n            <div className={`${styles.FlexFill} p-2`}>\n                <button\n                    className=\"btn btn-outline-danger px-lg-4 text-uppercase\"\n                    onClick={props.removeIngredientHandler}\n                >\n                    Remove\n                </button>\n            </div>\n            <div className={`${styles.FlexFill} p-2`}>\n                <button\n                    className=\"btn btn-outline-success px-lg-4 text-uppercase\"\n                    onClick={props.addIngredientHandler}\n                >\n                    Add\n                </button>\n            </div>\n        </div>\n    );\n};\n\nexport default BuildControl;\n","import React from \"react\";\nimport styles from \"./BuildControls.module.css\";\nimport BuildControl from \"./build_control/BuildControl\";\nimport { Card, Row, Col } from \"react-bootstrap\";\n\nconst controls = [\n    { label: \"Salad\", type: \"salad\" },\n    { label: \"Bacon\", type: \"bacon\" },\n    { label: \"Cheese\", type: \"cheese\" },\n    { label: \"Meat\", type: \"meat\" }\n];\n\nconst BuildControls = props => {\n    return (\n        <Card\n            className={`${\n                styles.BuildControls\n            } mx-auto shadow p-3 my-4 bg-white rounded`}\n        >\n            <Card.Body>\n                <Row>\n                    <Col>\n                        <Card.Title className=\"font-weight-bolder text-warning py-3\">\n                            Available Ingredients\n                        </Card.Title>\n\n                        {controls.map(ctrl => (\n                            <BuildControl\n                                key={ctrl.label}\n                                label={ctrl.label}\n                                addIngredientHandler={() =>\n                                    props.addIngredientHandler(ctrl.type)\n                                }\n                                removeIngredientHandler={() =>\n                                    props.removeIngredientHandler(ctrl.type)\n                                }\n                            />\n                        ))}\n                        <button\n                            className={`btn btn-block btn-outline-success mt-3`}\n                            disabled={!props.isPurchasable}\n                            onClick={props.showModalHandler}\n                        >\n                            ORDER NOW{\" \"}\n                            <span\n                                className={`${\n                                    styles.PriceBadge\n                                } align-middle font-weight-bolder badge badge-pill badge-primary`}\n                            >\n                                {`$${props.price.toFixed(2)}`}\n                            </span>\n                        </button>\n                    </Col>\n                </Row>\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default BuildControls;\n","import React from \"react\";\nimport styles from \"./Backdrop.module.css\";\n\nconst backdrop = props =>\n    props.show ? (\n        <div className={styles.Backdrop} onClick={props.hideModalHandler} />\n    ) : null;\n\nexport default backdrop;\n","import React from \"react\";\nimport styles from \"./Modal.module.css\";\nimport Backdrop from \"../Backdrop/Backdrop\";\n\nconst modal = props => {\n    return (\n        <React.Fragment>\n            <Backdrop\n                show={props.show}\n                hideModalHandler={props.hideModalHandler}\n            />\n            <div className={styles.Modal}>\n                <div className=\"modal-dialog\">\n                    <div className=\"modal-content\">\n                        <div className=\"modal-header\">\n                            <h4 className=\"modal-title\">Order Details</h4>\n                        </div>\n\n                        <div className=\"modal-body\">{props.children}</div>\n                    </div>\n                </div>\n            </div>\n        </React.Fragment>\n    );\n};\n\nexport default modal;\n","import React from \"react\";\n\nconst orderSummary = props => {\n    const ingredientSummary = Object.keys(props.ingredients).map((ing, i) => {\n        return (\n            <li key={ing + i}>\n                <span style={{ textTransform: \"capitalize\" }}>{ing}: </span>\n                {props.ingredients[ing]}\n            </li>\n        );\n    });\n\n    return (\n        <React.Fragment>\n            <p>\n                Total Price: <strong>${props.price.toFixed(2)}</strong>\n            </p>\n            <p>Ingredients: </p>\n            <ul>{ingredientSummary}</ul>\n            <p>Proceed to Checkout</p>\n            <button\n                className={`btn btn-outline-danger mr-3 px-3`}\n                onClick={props.purchaseCancelled}\n            >\n                Cancel\n            </button>\n            <button\n                className={`btn btn-outline-success ml-3 px-3`}\n                onClick={props.purchaseContinue}\n            >\n                Success\n            </button>\n        </React.Fragment>\n    );\n};\n\nexport default orderSummary;\n","import React, { Component } from \"react\";\nimport Burger from \"../../components/burger/Burger\";\nimport BuildControls from \"../../components/build_controls/BuildControls\";\nimport Modal from \"../../components/UI/Modal/Modal\";\nimport OrderSummary from \"../../components/OrderSummary/OrderSummary\";\n\nconst INGREDIENT_PRICES = {\n    salad: 0.5,\n    cheese: 0.4,\n    meat: 1.3,\n    bacon: 0.7\n};\n\nclass BurgerBuilder extends Component {\n    state = {\n        ingredients: {\n            salad: 0,\n            bacon: 0,\n            cheese: 0,\n            meat: 0\n        },\n        price: 4,\n        isPurchasable: false,\n        showModal: false\n    };\n\n    updateIsPurchasableState = ingredients => {\n        const ingredientCount = Object.values(ingredients).reduce(\n            (sum, currentValue) => {\n                return sum + currentValue;\n            },\n            0\n        );\n        this.setState({ isPurchasable: ingredientCount > 0 });\n    };\n\n    addIngredientHandler = type => {\n        const oldCount = this.state.ingredients[type];\n        const updatedCount = oldCount + 1;\n        const ingredientsCopy = {\n            ...this.state.ingredients\n        };\n        ingredientsCopy[type] = updatedCount;\n\n        const oldPrice = this.state.price;\n        const newPrice = oldPrice + INGREDIENT_PRICES[type];\n\n        this.setState({\n            ingredients: ingredientsCopy,\n            price: newPrice\n        });\n        this.updateIsPurchasableState(ingredientsCopy);\n    };\n\n    removeIngredientHandler = type => {\n        const oldCount = this.state.ingredients[type];\n        if (oldCount <= 0) return;\n\n        const updatedCount = oldCount - 1;\n        const ingredientsCopy = {\n            ...this.state.ingredients\n        };\n        ingredientsCopy[type] = updatedCount;\n\n        const oldPrice = this.state.price;\n        const newPrice = oldPrice - INGREDIENT_PRICES[type];\n\n        this.setState({\n            ingredients: ingredientsCopy,\n            price: newPrice\n        });\n        this.updateIsPurchasableState(ingredientsCopy);\n    };\n\n    showModalHandler = () => {\n        this.setState({ showModal: true });\n        console.log(this.state.showModal);\n    };\n\n    hideModalHandler = () => {\n        this.setState({ showModal: false });\n    };\n\n    purchaseContinue = () => {\n        alert(\"You continue!\");\n    };\n\n    render() {\n        let modal = null;\n        if (this.state.showModal) {\n            console.log(this.state.showModal);\n            modal = (\n                <Modal\n                    show={this.state.showModal}\n                    hideModalHandler={this.hideModalHandler}\n                >\n                    <OrderSummary\n                        price={this.state.price}\n                        purchaseCancelled={this.hideModalHandler}\n                        purchaseContinue={this.purchaseContinue}\n                        ingredients={this.state.ingredients}\n                    />\n                </Modal>\n            );\n        }\n        return (\n            <React.Fragment>\n                {modal}\n                <Burger ingredients={this.state.ingredients} />\n                <BuildControls\n                    price={this.state.price}\n                    isPurchasable={this.state.isPurchasable}\n                    addIngredientHandler={this.addIngredientHandler}\n                    removeIngredientHandler={this.removeIngredientHandler}\n                    showModalHandler={this.showModalHandler}\n                />\n            </React.Fragment>\n        );\n    }\n}\n\nexport default BurgerBuilder;\n","import React from \"react\";\nimport { Navbar, Nav } from \"react-bootstrap\";\n\nconst navbar = () => {\n    return (\n        <Navbar bg=\"light\" expand=\"lg\">\n            <Navbar.Brand href=\"#\">MP's Builder</Navbar.Brand>\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n            <Navbar.Collapse id=\"basic-navbar-nav\">\n                <Nav.Link href=\"#\">Home</Nav.Link>\n            </Navbar.Collapse>\n        </Navbar>\n    );\n};\n\nexport default navbar;\n","import React from \"react\";\nimport styles from \"./Layout.module.css\";\nimport Sidebar from \"../UI/Sidebar/Sidebar\";\nimport BurgerBuilder from \"../../containers/burger_builder/BurgerBuilder\";\nimport Navbar from \"../UI/Navbar/Navbar\";\nimport { Container, Row, Col } from \"react-bootstrap\";\n\nconst Layout = props => {\n    return (\n        <React.Fragment>\n            <Container fluid=\"true\">\n                <Row>\n                    <Col\n                        md={2}\n                        className={\n                            \"border border-primary bg-light\" +\n                            \" \" +\n                            styles.RemoveColPaddings\n                        }\n                    >\n                        <Sidebar />\n                    </Col>\n                    <Col className={styles.RemoveColPaddings}>\n                        <Navbar />\n                        <BurgerBuilder />\n                    </Col>\n                </Row>\n            </Container>\n            {/* <main>{props.children}</main> */}\n        </React.Fragment>\n    );\n};\n\nexport default Layout;\n","import \"./assets/css/bootstrap.css\";\nimport React from \"react\";\nimport Layout from \"./components/layout/Layout\";\n\nfunction App() {\n    return <Layout />;\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}