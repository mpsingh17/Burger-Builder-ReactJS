{"version":3,"sources":["components/burger/burger_ingredient/BurgerIngredient.module.css","components/build_controls/build_control/BuildControl.module.css","components/build_controls/BuildControls.module.css","components/burger/Burger.module.css","components/layout/Layout.js","components/burger/burger_ingredient/BurgerIngredient.js","components/burger/Burger.js","components/build_controls/build_control/BuildControl.js","components/build_controls/BuildControls.js","containers/burger_builder/BurgerBuilder.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","BreadBottom","BreadTop","Seeds1","Seeds2","Meat","Cheese","Salad","Bacon","BuildControl","Label","Less","More","BuildControls","OrderButton","enable","Burger","Layout","props","react_default","a","createElement","Fragment","children","BurgerIngredient","ingredient","type","className","styles","totalIngredients","Object","keys","ingredients","forEach","ing","i","push","transformedIngredients","map","burger_ingredient_BurgerIngredient","key","length","label","onClick","removeIngredientHandler","addIngredientHandler","controls","price","toFixed","ctrl","build_control_BuildControl","disabled","isPurchasable","INGREDIENT_PRICES","salad","cheese","meat","bacon","BurgerBuilder","state","updateIsPurchasableState","ingredientCount","values","reduce","sum","currentValue","_this","setState","updatedCount","ingredientsCopy","objectSpread","newPrice","oldCount","burger_Burger","this","build_controls_BuildControls","Component","App","layout_Layout","burger_builder_BurgerBuilder","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9ae59e3f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"BurgerIngredient_BreadBottom__WXqLD\",\"BreadTop\":\"BurgerIngredient_BreadTop__1_qX2\",\"Seeds1\":\"BurgerIngredient_Seeds1__2ecZm\",\"Seeds2\":\"BurgerIngredient_Seeds2__3n2yj\",\"Meat\":\"BurgerIngredient_Meat__1ya4y\",\"Cheese\":\"BurgerIngredient_Cheese__3kHUH\",\"Salad\":\"BurgerIngredient_Salad__29f5j\",\"Bacon\":\"BurgerIngredient_Bacon__1e0OV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"BuildControl_BuildControl__2h-UU\",\"Label\":\"BuildControl_Label__1eu9b\",\"Less\":\"BuildControl_Less__YvstF\",\"More\":\"BuildControl_More__yDTYn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControls\":\"BuildControls_BuildControls__1KIrQ\",\"OrderButton\":\"BuildControls_OrderButton__ztgKJ\",\"enable\":\"BuildControls_enable__135Io\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"Burger_Burger__cUT8f\"};","import React from 'react';\n\nconst Layout = (props) => {\n    return (\n        <React.Fragment>\n            <div>Toolbar, Sidebar, Backdrop</div>\n        \n            <main>\n                {props.children}\n            </main>\n\n        </React.Fragment>\n    );\n}\n\nexport default Layout;","import React from 'react';\nimport styles from './BurgerIngredient.module.css';\nimport PropType from 'prop-types';\n\nconst BurgerIngredient = (props) => {\n    let ingredient = null;\n    \n    switch (props.type) {\n        case ('bread-bottom'):\n            ingredient = <div className={styles.BreadBottom}></div>;\n            break;\n\n        case ('bread-top'):\n            ingredient = (\n                <div className={styles.BreadTop}>\n                    <div className={styles.Seeds1}></div>\n                    <div className={styles.Seeds2}></div>\n                </div>\n            );\n            break;\n\n        case ('meat'):\n            ingredient = <div className={styles.Meat}></div>;\n        break;\n\n        case ('cheese'):\n            ingredient = <div className={styles.Cheese}></div>;\n        break;\n\n        case ('salad'):\n            ingredient = <div className={styles.Salad}></div>;\n        break;\n\n        case ('bacon'):\n            ingredient = <div className={styles.Bacon}></div>;\n        break;\n\n        default:\n            ingredient = null;\n            break;\n    }\n    return ingredient;\n}\n\nBurgerIngredient.propTypes = {\n    type: PropType.string.isRequired\n};\n\nexport default BurgerIngredient;\n\n","import React from 'react';\nimport styles from './Burger.module.css';\nimport BurgerIngredient from './burger_ingredient/BurgerIngredient';\n\nconst Burger = (props) => {\n\n    const totalIngredients = [];\n    Object.keys(props.ingredients)\n    .forEach((ing) => {\n        for (let i = 0; i < props.ingredients[ing]; i++) {\n            totalIngredients.push(ing);\n        }\n    });\n\n    let transformedIngredients = totalIngredients.map((ing, i) => {\n        return <BurgerIngredient key={ing + i} type={ing} />\n    });\n\n    if (transformedIngredients.length === 0)\n        transformedIngredients = <p>Select ingredients, please.</p>\n\n    return (\n        <div className={styles.Burger}>\n            <BurgerIngredient type=\"bread-top\" />\n            {transformedIngredients}\n            <BurgerIngredient type=\"bread-bottom\" />\n        </div>\n    )\n}\n\nexport default Burger;\n","import React from 'react';\nimport styles from './BuildControl.module.css';\n\nconst BuildControl = (props) => {\n    return (\n        <div className={styles.BuildControl}>\n            <div className={styles.Label}>{props.label}</div>\n            <button\n                className={styles.Less}\n                onClick={props.removeIngredientHandler}>Less</button>\n            <button\n                className={styles.More}\n                onClick={props.addIngredientHandler}>More</button>\n        </div>\n    );\n}\n\nexport default BuildControl;\n","import React from 'react';\nimport styles from './BuildControls.module.css';\nimport BuildControl from './build_control/BuildControl';\n\nconst controls = [\n    { label: 'Salad', type: 'salad' },\n    { label: 'Bacon', type: 'bacon' },\n    { label: 'Cheese', type: 'cheese' },\n    { label: 'Meat', type: 'meat' },\n]\n\nconst BuildControls = (props) => {\n\n    return (\n        <div className={styles.BuildControls}>\n            <p>Current Price: {props.price.toFixed(2)}</p>\n            {controls.map(ctrl => (\n                <BuildControl\n                    key={ctrl.label}\n                    label={ctrl.label}\n                    addIngredientHandler={() => props.addIngredientHandler(ctrl.type)}\n                    removeIngredientHandler={() => props.removeIngredientHandler(ctrl.type)} />\n            ))}\n            <button\n                className={styles.OrderButton}\n                disabled={!props.isPurchasable}>ORDER NOW</button>\n        </div>\n    );\n}\n\nexport default BuildControls;\n","import React, {Component} from 'react';\nimport Burger from '../../components/burger/Burger';\nimport BuildControls from '../../components/build_controls/BuildControls'; \n\nconst INGREDIENT_PRICES = {\n    salad: 0.5,\n    cheese: 0.4,\n    meat: 1.3,\n    bacon: 0.7\n}\n\nclass BurgerBuilder extends Component {\n\n    state = {\n        ingredients : {\n            salad: 0,\n            bacon: 0,\n            cheese: 0,\n            meat: 0\n        },\n        price: 4,\n        isPurchasable: false\n    }\n\n    updateIsPurchasableState = (ingredients) => {\n        const ingredientCount = Object\n        .values(ingredients)\n        .reduce((sum, currentValue) => { return sum + currentValue }, 0);\n        this.setState({isPurchasable: ingredientCount > 0});\n    };\n\n    addIngredientHandler = (type) => {\n        const oldCount = this.state.ingredients[type];\n        const updatedCount = oldCount + 1;\n        const ingredientsCopy = {\n            ...this.state.ingredients\n        };\n        ingredientsCopy[type] = updatedCount;\n\n        const oldPrice = this.state.price;\n        const newPrice = oldPrice + INGREDIENT_PRICES[type];\n        \n        this.setState({\n            ingredients: ingredientsCopy,\n            price: newPrice\n        });\n        this.updateIsPurchasableState(ingredientsCopy);\n    }\n\n    removeIngredientHandler = (type) => {\n        const oldCount = this.state.ingredients[type];\n        if (oldCount <= 0) return;\n\n        const updatedCount = oldCount - 1;\n        const ingredientsCopy = {\n            ...this.state.ingredients\n        };\n        ingredientsCopy[type] = updatedCount;\n\n        const oldPrice = this.state.price;\n        const newPrice = oldPrice - INGREDIENT_PRICES[type];\n        \n        this.setState({\n            ingredients: ingredientsCopy,\n            price: newPrice\n        });\n        this.updateIsPurchasableState(ingredientsCopy);\n    }\n\n\n    render () {\n        return (\n            <React.Fragment>\n                <Burger ingredients={this.state.ingredients} />\n                <BuildControls\n                    price={this.state.price}\n                    isPurchasable={this.state.isPurchasable}\n                    addIngredientHandler={this.addIngredientHandler}\n                    removeIngredientHandler={this.removeIngredientHandler} />\n            </React.Fragment>\n        );\n    }\n\n}\n\nexport default BurgerBuilder;","import React from 'react';\nimport Layout from './components/layout/Layout';\nimport BurgerBuilder from './containers/burger_builder/BurgerBuilder';\n\nfunction App() {\n\n    return (\n        <div>\n            <Layout>\n\t\t\t\t<BurgerBuilder />\n\t\t\t</Layout>\n        </div>\n\t);\n\t\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}